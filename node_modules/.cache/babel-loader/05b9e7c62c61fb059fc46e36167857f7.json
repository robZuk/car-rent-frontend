{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authService from \"./authService\"; // Get user from localstorage\n\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nconst initialState = {\n  user: user ? user : null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\"\n}; //Register new user\n\nexport const register = createAsyncThunk(\"auth/register\", async (user, thunkAPI) => {\n  try {\n    return await authService.register(user);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n}); //Login user\n\nexport const login = createAsyncThunk(\"auth/login\", async (user, thunkAPI) => {\n  try {\n    return await authService.login(user);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n}); // Logout user\n\nexport const logout = createAsyncThunk(\"auth/logout\", async () => {\n  await authService.logout();\n}); //Get User Details\n\nexport const getUserDetails = createAsyncThunk(\"auth/profile\", async (user, thunkAPI) => {\n  try {\n    return await authService.getUserDetails(user);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = false;\n      state.message = \"\";\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(register.pending, state => {\n      state.isLoading = true;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(register.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    }).addCase(login.pending, state => {\n      state.isLoading = true;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(login.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    }).addCase(logout.fulfilled, state => {\n      state.user = null;\n    }).addCase(profile.pending, state => {\n      state.isLoading = true;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(register.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    });\n  }\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"sources":["E:/ROBERT PROJECTS/car-rental2022/frontend/src/redux/auth/authSlice.js"],"names":["createSlice","createAsyncThunk","authService","user","JSON","parse","localStorage","getItem","initialState","isError","isSuccess","isLoading","message","register","thunkAPI","error","response","data","toString","rejectWithValue","login","logout","getUserDetails","authSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","profile","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport authService from \"./authService\";\r\n\r\n// Get user from localstorage\r\nconst user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\nconst initialState = {\r\n  user: user ? user : null,\r\n  isError: false,\r\n  isSuccess: false,\r\n  isLoading: false,\r\n  message: \"\",\r\n};\r\n\r\n//Register new user\r\nexport const register = createAsyncThunk(\r\n  \"auth/register\",\r\n  async (user, thunkAPI) => {\r\n    try {\r\n      return await authService.register(user);\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\n//Login user\r\nexport const login = createAsyncThunk(\"auth/login\", async (user, thunkAPI) => {\r\n  try {\r\n    return await authService.login(user);\r\n  } catch (error) {\r\n    const message =\r\n      (error.response && error.response.data && error.response.data.message) ||\r\n      error.message ||\r\n      error.toString();\r\n\r\n    return thunkAPI.rejectWithValue(message);\r\n  }\r\n});\r\n\r\n// Logout user\r\nexport const logout = createAsyncThunk(\"auth/logout\", async () => {\r\n  await authService.logout();\r\n});\r\n\r\n//Get User Details\r\nexport const getUserDetails = createAsyncThunk(\r\n  \"auth/profile\",\r\n  async (user, thunkAPI) => {\r\n    try {\r\n      return await authService.getUserDetails(user);\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state) => {\r\n      state.isLoading = false;\r\n      state.isError = false;\r\n      state.isSuccess = false;\r\n      state.message = \"\";\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(register.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(register.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(register.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n        state.user = null;\r\n      })\r\n      .addCase(login.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(login.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n        state.user = null;\r\n      })\r\n      .addCase(logout.fulfilled, (state) => {\r\n        state.user = null;\r\n      })\r\n      .addCase(profile.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(register.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(register.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n        state.user = null;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}