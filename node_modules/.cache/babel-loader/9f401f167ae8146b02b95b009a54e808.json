{"ast":null,"code":"var _jsxFileName = \"E:\\\\ROBERT PROJECTS\\\\car-rental2022\\\\frontend\\\\src\\\\screens\\\\RegisterScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { useForm } from \"react-hook-form\";\nimport Loader from \"../components/Loader\";\nimport { register } from \"../actions/userActions\"; // import { register, reset } from \"../redux/auth/authSlice\";\n\nimport HeaderContainer from \"../themes/HeaderContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RegisterScreen() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\"); //   const [message, setMessage] = useState(null);\n  // const [formData, setFormData] = useState({\n  //   name: \"\",\n  //   email: \"\",\n  //   password: \"\",\n  //   password2: \"\",\n  // });\n  // const { name, email, password, password2 } = formData;\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate(); // const onChange = (e) => {\n  //   setFormData((prevState) => ({\n  //     ...prevState,\n  //     [e.target.name]: e.target.value,\n  //   }));\n  // };\n\n  const {\n    register: useFormRegister,\n    handleSubmit,\n    formState: {\n      errors: useFormErrors\n    }\n  } = useForm();\n  const userRegister = useSelector(state => state.userRegister);\n  let {\n    loading,\n    error,\n    userInfo\n  } = userRegister; // const { user, loading, isError, isSuccess, message } = useSelector(\n  //   (state) => state.auth\n  // );\n\n  useEffect(() => {\n    // Redirect when logged in\n    userInfo && navigate(\"/cars\");\n    error && toast.error(error); // useFormErrors.name?.type === \"required\" &&\n    //   toast.error(\"Please enter a name\");\n    // useFormErrors.email?.type === \"required\" &&\n    //   toast.error(\"Please enter an email\");\n    // useFormErrors.password?.type === \"required\" &&\n    //   toast.error(\"Please enter a password\");\n    // useFormErrors.confirmPassword?.type === \"required\" &&\n    //   toast.error(\"Please confirm password\");\n    //message && toast.error(\"User already exists\");\n  }, [userInfo, navigate, error // useFormErrors.email,\n  // useFormErrors.password,\n  // useFormErrors.name,\n  // useFormErrors.confirmPassword,\n  ]);\n\n  const submitHandler = e => {\n    //e.preventDefault();\n    if (password !== confirmPassword) {\n      toast.error(\"Passwords do not match\");\n    } else {\n      const userData = {\n        name,\n        email,\n        password\n      };\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(HeaderContainer, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        height: \"40vh\",\n        marginTop: \"20vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-8 col-lg-6\",\n          style: {\n            border: \".5px solid lightgray\",\n            borderRadius: \"5px\",\n            padding: \"30px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(submitHandler),\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              className: \"form-label\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"input-group-text\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-person-fill text-secondary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...useFormRegister(\"name\", {\n                  required: true\n                }),\n                type: \"text\",\n                placeholder: \"Enter a name\",\n                className: \"form-control\",\n                name: \"name\",\n                id: \"name\",\n                value: name,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              className: \"form-label\",\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"input-group-text\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-envelope-fill text-secondary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...useFormRegister(\"email\", {\n                  required: true\n                }),\n                type: \"email\",\n                placeholder: \"Enter an email\",\n                className: \"form-control\",\n                name: \"email\",\n                id: \"email\",\n                value: email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              className: \"form-label\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"input-group-text\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-lock-fill text-secondary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...useFormRegister(\"password\", {\n                  required: true\n                }),\n                type: \"password\",\n                placeholder: \"Enter password\",\n                className: \"form-control\",\n                name: \"password\",\n                id: \"password\",\n                value: password,\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              className: \"form-label\",\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"input-group-text\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-lock-fill text-secondary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...useFormRegister(\"password2\", {\n                  required: true\n                }),\n                type: \"password\",\n                placeholder: \"Confirm password\",\n                className: \"form-control\",\n                name: \"password2\",\n                id: \"password2\",\n                value: confirmPassword,\n                onChange: e => setConfirmPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-cardialred mt-3\",\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"my-3 text-center\",\n          children: [\"Have an Account?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n            className: \"text-cardialred \",\n            to: \"/login\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterScreen, \"979skhRMclVXFX2FGNLRlZLHJDM=\", false, function () {\n  return [useDispatch, useNavigate, useForm, useSelector, useFormRegister, useFormRegister, useFormRegister, useFormRegister];\n});\n\n_c = RegisterScreen;\nexport default RegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"sources":["E:/ROBERT PROJECTS/car-rental2022/frontend/src/screens/RegisterScreen.js"],"names":["React","useState","useEffect","Link","useNavigate","useDispatch","useSelector","toast","useForm","Loader","register","HeaderContainer","RegisterScreen","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","dispatch","navigate","useFormRegister","handleSubmit","formState","errors","useFormErrors","userRegister","state","loading","error","userInfo","submitHandler","e","userData","height","marginTop","border","borderRadius","padding","required","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Loader from \"../components/Loader\";\r\nimport { register } from \"../actions/userActions\";\r\n// import { register, reset } from \"../redux/auth/authSlice\";\r\nimport HeaderContainer from \"../themes/HeaderContainer\";\r\n\r\nfunction RegisterScreen() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  //   const [message, setMessage] = useState(null);\r\n\r\n  // const [formData, setFormData] = useState({\r\n  //   name: \"\",\r\n  //   email: \"\",\r\n  //   password: \"\",\r\n  //   password2: \"\",\r\n  // });\r\n\r\n  // const { name, email, password, password2 } = formData;\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  // const onChange = (e) => {\r\n  //   setFormData((prevState) => ({\r\n  //     ...prevState,\r\n  //     [e.target.name]: e.target.value,\r\n  //   }));\r\n  // };\r\n\r\n  const {\r\n    register: useFormRegister,\r\n    handleSubmit,\r\n    formState: { errors: useFormErrors },\r\n  } = useForm();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  let { loading, error, userInfo } = userRegister;\r\n\r\n  // const { user, loading, isError, isSuccess, message } = useSelector(\r\n  //   (state) => state.auth\r\n  // );\r\n\r\n  useEffect(() => {\r\n    // Redirect when logged in\r\n\r\n    userInfo && navigate(\"/cars\");\r\n\r\n    error && toast.error(error);\r\n    // useFormErrors.name?.type === \"required\" &&\r\n    //   toast.error(\"Please enter a name\");\r\n    // useFormErrors.email?.type === \"required\" &&\r\n    //   toast.error(\"Please enter an email\");\r\n    // useFormErrors.password?.type === \"required\" &&\r\n    //   toast.error(\"Please enter a password\");\r\n    // useFormErrors.confirmPassword?.type === \"required\" &&\r\n    //   toast.error(\"Please confirm password\");\r\n    //message && toast.error(\"User already exists\");\r\n  }, [\r\n    userInfo,\r\n    navigate,\r\n    error,\r\n    // useFormErrors.email,\r\n    // useFormErrors.password,\r\n    // useFormErrors.name,\r\n    // useFormErrors.confirmPassword,\r\n  ]);\r\n\r\n  const submitHandler = (e) => {\r\n    //e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      toast.error(\"Passwords do not match\");\r\n    } else {\r\n      const userData = {\r\n        name,\r\n        email,\r\n        password,\r\n      };\r\n\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <HeaderContainer>\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          height: \"40vh\",\r\n          marginTop: \"20vh\",\r\n        }}\r\n      >\r\n        <div className=\"row justify-content-center\">\r\n          <div\r\n            className=\"col-12 col-md-8 col-lg-6\"\r\n            style={{\r\n              border: \".5px solid lightgray\",\r\n              borderRadius: \"5px\",\r\n              padding: \"30px\",\r\n            }}\r\n          >\r\n            <h4>Sign Up</h4>\r\n            {loading && <Loader />}\r\n\r\n            <form onSubmit={handleSubmit(submitHandler)}>\r\n              <label htmlFor=\"name\" className=\"form-label\">\r\n                Name\r\n              </label>\r\n              <div className=\"input-group mb-3\">\r\n                <span className=\"input-group-text\">\r\n                  <i className=\"bi bi-person-fill text-secondary\"></i>\r\n                </span>\r\n                <input\r\n                  {...useFormRegister(\"name\", {\r\n                    required: true,\r\n                  })}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter a name\"\r\n                  className=\"form-control\"\r\n                  name=\"name\"\r\n                  id=\"name\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              </div>\r\n              <label htmlFor=\"email\" className=\"form-label\">\r\n                Email address\r\n              </label>\r\n              <div className=\"input-group mb-3\">\r\n                <span className=\"input-group-text\">\r\n                  <i className=\"bi bi-envelope-fill text-secondary\"></i>\r\n                </span>\r\n                <input\r\n                  {...useFormRegister(\"email\", {\r\n                    required: true,\r\n                  })}\r\n                  type=\"email\"\r\n                  placeholder=\"Enter an email\"\r\n                  className=\"form-control\"\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </div>\r\n              <label htmlFor=\"password\" className=\"form-label\">\r\n                Password\r\n              </label>\r\n              <div className=\"input-group mb-3\">\r\n                <span className=\"input-group-text\">\r\n                  <i className=\"bi bi-lock-fill text-secondary\"></i>\r\n                </span>\r\n                <input\r\n                  {...useFormRegister(\"password\", {\r\n                    required: true,\r\n                  })}\r\n                  type=\"password\"\r\n                  placeholder=\"Enter password\"\r\n                  className=\"form-control\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </div>\r\n              <label htmlFor=\"password\" className=\"form-label\">\r\n                Confirm Password\r\n              </label>\r\n              <div className=\"input-group mb-3\">\r\n                <span className=\"input-group-text\">\r\n                  <i className=\"bi bi-lock-fill text-secondary\"></i>\r\n                </span>\r\n                <input\r\n                  {...useFormRegister(\"password2\", {\r\n                    required: true,\r\n                  })}\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm password\"\r\n                  className=\"form-control\"\r\n                  name=\"password2\"\r\n                  id=\"password2\"\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                />\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-cardialred mt-3\">\r\n                Register\r\n              </button>\r\n            </form>\r\n          </div>\r\n          <div className=\"my-3 text-center\">\r\n            Have an Account?{\" \"}\r\n            <Link className=\"text-cardialred \" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </HeaderContainer>\r\n  );\r\n}\r\n\r\nexport default RegisterScreen;\r\n"]},"metadata":{},"sourceType":"module"}