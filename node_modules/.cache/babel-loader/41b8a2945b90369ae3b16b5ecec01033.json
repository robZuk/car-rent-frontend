{"ast":null,"code":"var _jsxFileName = \"E:\\\\ROBERT PROJECTS\\\\car-rental2022\\\\frontend\\\\src\\\\screens\\\\UserEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserEditScreen() {\n  _s();\n\n  const params = useParams();\n  const navigate = useNavigate();\n  const userId = params.id;\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false);\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userUpdate = useSelector(state => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = userUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: USER_UPDATE_RESET\n      });\n      navigate(\"/admin/userlist\");\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [dispatch, navigate, userId, user, successUpdate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateUser({\n      _id: userId,\n      name,\n      email,\n      isAdmin\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/userlist\",\n      className: \"btn btn-light my-3\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserEditScreen, \"3FhwxDYUHWEHCiDEq3R3UKaH9zw=\", false, function () {\n  return [useParams, useNavigate, useDispatch, useSelector, useSelector];\n});\n\n_c = UserEditScreen;\nexport default UserEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditScreen\");","map":{"version":3,"sources":["E:/ROBERT PROJECTS/car-rental2022/frontend/src/screens/UserEditScreen.js"],"names":["React","useState","useEffect","Link","useParams","useNavigate","useDispatch","useSelector","Message","Loader","getUserDetails","updateUser","USER_UPDATE_RESET","UserEditScreen","params","navigate","userId","id","name","setName","email","setEmail","isAdmin","setIsAdmin","dispatch","userDetails","state","loading","error","user","userUpdate","loadingUpdate","errorUpdate","success","successUpdate","type","_id","submitHandler","e","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,WAA1B,QAA6C,kBAA7C;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,wBAA3C;AACA,SAASC,iBAAT,QAAkC,4BAAlC;;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AACxB,QAAMC,MAAM,GAAGV,SAAS,EAAxB;AACA,QAAMW,QAAQ,GAAGV,WAAW,EAA5B;AAEA,QAAMW,MAAM,GAAGF,MAAM,CAACG,EAAtB;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACqB,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMuB,QAAQ,GAAGlB,WAAW,EAA5B;AAEA,QAAMmB,WAAW,GAAGlB,WAAW,CAAEmB,KAAD,IAAWA,KAAK,CAACD,WAAlB,CAA/B;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BJ,WAAjC;AAEA,QAAMK,UAAU,GAAGvB,WAAW,CAAEmB,KAAD,IAAWA,KAAK,CAACI,UAAlB,CAA9B;AACA,QAAM;AACJH,IAAAA,OAAO,EAAEI,aADL;AAEJH,IAAAA,KAAK,EAAEI,WAFH;AAGJC,IAAAA,OAAO,EAAEC;AAHL,MAIFJ,UAJJ;AAMA5B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgC,aAAJ,EAAmB;AACjBV,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAEvB;AAAR,OAAD,CAAR;AACAG,MAAAA,QAAQ,CAAC,iBAAD,CAAR;AACD,KAHD,MAGO;AACL,UAAI,CAACc,IAAI,CAACX,IAAN,IAAcW,IAAI,CAACO,GAAL,KAAapB,MAA/B,EAAuC;AACrCQ,QAAAA,QAAQ,CAACd,cAAc,CAACM,MAAD,CAAf,CAAR;AACD,OAFD,MAEO;AACLG,QAAAA,OAAO,CAACU,IAAI,CAACX,IAAN,CAAP;AACAG,QAAAA,QAAQ,CAACQ,IAAI,CAACT,KAAN,CAAR;AACAG,QAAAA,UAAU,CAACM,IAAI,CAACP,OAAN,CAAV;AACD;AACF;AACF,GAbQ,EAaN,CAACE,QAAD,EAAWT,QAAX,EAAqBC,MAArB,EAA6Ba,IAA7B,EAAmCK,aAAnC,CAbM,CAAT;;AAeA,QAAMG,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACAf,IAAAA,QAAQ,CAACb,UAAU,CAAC;AAAEyB,MAAAA,GAAG,EAAEpB,MAAP;AAAeE,MAAAA,IAAf;AAAqBE,MAAAA,KAArB;AAA4BE,MAAAA;AAA5B,KAAD,CAAX,CAAR;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,eACG,GADH,eAEE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,iBAAT;AAA2B,MAAA,SAAS,EAAC,oBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAlDQT,c;UACQT,S,EACEC,W,EAQAC,W,EAEGC,W,EAGDA,W;;;KAfZM,c;AAoDT,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\r\n\r\nfunction UserEditScreen() {\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const userId = params.id;\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      navigate(\"/admin/userlist\");\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setIsAdmin(user.isAdmin);\r\n      }\r\n    }\r\n  }, [dispatch, navigate, userId, user, successUpdate]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {\" \"}\r\n      <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserEditScreen;\r\n"]},"metadata":{},"sourceType":"module"}