{"ast":null,"code":"var _jsxFileName = \"E:\\\\ROBERT PROJECTS\\\\car-rental2022\\\\frontend\\\\src\\\\screens\\\\RegisterScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { useForm } from \"react-hook-form\";\nimport Loader from \"../components/Loader\";\nimport { register } from \"../actions/userActions\"; // import { register, reset } from \"../redux/auth/authSlice\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RegisterScreen() {\n  _s();\n\n  var _useFormErrors$name, _useFormErrors$email, _useFormErrors$passwo, _useFormErrors$passwo2;\n\n  // const [name, setName] = useState(\"\");\n  // const [email, setEmail] = useState(\"\");\n  // const [password, setPassword] = useState(\"\");\n  // const [confirmPassword, setConfirmPassword] = useState(\"\");\n  //   const [message, setMessage] = useState(null);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  });\n  const {\n    name,\n    email,\n    password,\n    password2\n  } = formData;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const onChange = e => {\n    setFormData(prevState => ({ ...prevState,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const {\n    register: useFormRegister,\n    handleSubmit,\n    formState: {\n      errors: useFormErrors\n    }\n  } = useForm();\n  const userRegister = useSelector(state => state.userRegister);\n  let {\n    loading,\n    error,\n    userInfo\n  } = userRegister; // const { user, loading, isError, isSuccess, message } = useSelector(\n  //   (state) => state.auth\n  // );\n\n  useEffect(() => {\n    // Redirect when logged in\n    userInfo && navigate(\"/cars\");\n    error && toast.error(error); // useFormErrors.name?.type === \"required\" &&\n    //   toast.error(\"Please enter a name\");\n    // useFormErrors.email?.type === \"required\" &&\n    //   toast.error(\"Please enter an email\");\n    // useFormErrors.password?.type === \"required\" &&\n    //   toast.error(\"Please enter a password\");\n    // useFormErrors.confirmPassword?.type === \"required\" &&\n    //   toast.error(\"Please confirm password\");\n    //message && toast.error(\"User already exists\");\n  }, [userInfo, navigate, error // useFormErrors.email,\n  // useFormErrors.password,\n  // useFormErrors.name,\n  // useFormErrors.confirmPassword,\n  ]);\n\n  const submitHandler = e => {\n    //e.preventDefault();\n    if (password !== password2) {\n      toast.error(\"Passwords do not match\");\n    } else {\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      height: \"40vh\",\n      marginTop: \"20vh\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-md-8 col-lg-6\",\n        style: {\n          border: \".5px solid lightgray\",\n          borderRadius: \"5px\",\n          padding: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(submitHandler),\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            className: \"form-label\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"input-group-text\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-person-fill text-secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...useFormRegister(\"name\", {\n                required: true\n              }),\n              type: \"text\",\n              placeholder: \"Enter a name\",\n              className: `form-control ${useFormErrors.name && `is-invalid`}`,\n              name: \"name\",\n              id: \"name\",\n              value: name,\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), ((_useFormErrors$name = useFormErrors.name) === null || _useFormErrors$name === void 0 ? void 0 : _useFormErrors$name.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: \"Please enter a name.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"form-label\",\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"input-group-text\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-envelope-fill text-secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...useFormRegister(\"email\", {\n                required: true\n              }),\n              type: \"email\",\n              placeholder: \"Enter an email\",\n              className: `form-control ${useFormErrors.email && `is-invalid`}`,\n              name: \"email\",\n              id: \"email\",\n              value: email,\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), ((_useFormErrors$email = useFormErrors.email) === null || _useFormErrors$email === void 0 ? void 0 : _useFormErrors$email.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: \"Please enter an email.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"form-label\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"input-group-text\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-lock-fill text-secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...useFormRegister(\"password\", {\n                required: true\n              }),\n              type: \"password\",\n              placeholder: \"Enter password\",\n              className: `form-control ${useFormErrors.password && `is-invalid`}`,\n              name: \"password\",\n              id: \"password\",\n              value: password,\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), ((_useFormErrors$passwo = useFormErrors.password) === null || _useFormErrors$passwo === void 0 ? void 0 : _useFormErrors$passwo.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: \"Please enter a password.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password2\",\n            className: \"form-label\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"input-group-text\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-lock-fill text-secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...useFormRegister(\"password2\", {\n                required: true\n              }),\n              type: \"password\",\n              placeholder: \"Confirm password\",\n              className: `form-control ${useFormErrors.password2 && `is-invalid`}`,\n              name: \"password2\",\n              id: \"password2\",\n              value: password2,\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), ((_useFormErrors$passwo2 = useFormErrors.password2) === null || _useFormErrors$passwo2 === void 0 ? void 0 : _useFormErrors$passwo2.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: \"Please confirm password.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-cardialred mt-3\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-3 text-center\",\n        children: [\"Have an Account?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n          className: \"text-cardialred \",\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterScreen, \"xVVnqo7qGWE3KpCljGY7vIVHPxQ=\", false, function () {\n  return [useDispatch, useNavigate, useForm, useSelector, useFormRegister, useFormRegister, useFormRegister, useFormRegister];\n});\n\n_c = RegisterScreen;\nexport default RegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"sources":["E:/ROBERT PROJECTS/car-rental2022/frontend/src/screens/RegisterScreen.js"],"names":["React","useState","useEffect","Link","useNavigate","useDispatch","useSelector","toast","useForm","Loader","register","RegisterScreen","formData","setFormData","name","email","password","password2","dispatch","navigate","onChange","e","prevState","target","value","useFormRegister","handleSubmit","formState","errors","useFormErrors","userRegister","state","loading","error","userInfo","submitHandler","height","marginTop","border","borderRadius","padding","required","type"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Loader from \"../components/Loader\";\r\nimport { register } from \"../actions/userActions\";\r\n// import { register, reset } from \"../redux/auth/authSlice\";\r\n\r\nfunction RegisterScreen() {\r\n  // const [name, setName] = useState(\"\");\r\n  // const [email, setEmail] = useState(\"\");\r\n  // const [password, setPassword] = useState(\"\");\r\n  // const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  //   const [message, setMessage] = useState(null);\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n\r\n  const { name, email, password, password2 } = formData;\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const onChange = (e) => {\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const {\r\n    register: useFormRegister,\r\n    handleSubmit,\r\n    formState: { errors: useFormErrors },\r\n  } = useForm();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  let { loading, error, userInfo } = userRegister;\r\n\r\n  // const { user, loading, isError, isSuccess, message } = useSelector(\r\n  //   (state) => state.auth\r\n  // );\r\n\r\n  useEffect(() => {\r\n    // Redirect when logged in\r\n\r\n    userInfo && navigate(\"/cars\");\r\n\r\n    error && toast.error(error);\r\n    // useFormErrors.name?.type === \"required\" &&\r\n    //   toast.error(\"Please enter a name\");\r\n    // useFormErrors.email?.type === \"required\" &&\r\n    //   toast.error(\"Please enter an email\");\r\n    // useFormErrors.password?.type === \"required\" &&\r\n    //   toast.error(\"Please enter a password\");\r\n    // useFormErrors.confirmPassword?.type === \"required\" &&\r\n    //   toast.error(\"Please confirm password\");\r\n    //message && toast.error(\"User already exists\");\r\n  }, [\r\n    userInfo,\r\n    navigate,\r\n    error,\r\n    // useFormErrors.email,\r\n    // useFormErrors.password,\r\n    // useFormErrors.name,\r\n    // useFormErrors.confirmPassword,\r\n  ]);\r\n\r\n  const submitHandler = (e) => {\r\n    //e.preventDefault();\r\n    if (password !== password2) {\r\n      toast.error(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"container\"\r\n      style={{\r\n        height: \"40vh\",\r\n        marginTop: \"20vh\",\r\n      }}\r\n    >\r\n      <div className=\"row justify-content-center\">\r\n        <div\r\n          className=\"col-12 col-md-8 col-lg-6\"\r\n          style={{\r\n            border: \".5px solid lightgray\",\r\n            borderRadius: \"5px\",\r\n            padding: \"30px\",\r\n          }}\r\n        >\r\n          <h4>Sign Up</h4>\r\n          {loading && <Loader />}\r\n\r\n          <form onSubmit={handleSubmit(submitHandler)}>\r\n            <label htmlFor=\"name\" className=\"form-label\">\r\n              Name\r\n            </label>\r\n            <div className=\"input-group mb-3\">\r\n              <span className=\"input-group-text\">\r\n                <i className=\"bi bi-person-fill text-secondary\"></i>\r\n              </span>\r\n              <input\r\n                {...useFormRegister(\"name\", {\r\n                  required: true,\r\n                })}\r\n                type=\"text\"\r\n                placeholder=\"Enter a name\"\r\n                className={`form-control ${useFormErrors.name && `is-invalid`}`}\r\n                name=\"name\"\r\n                id=\"name\"\r\n                value={name}\r\n                onChange={onChange}\r\n              />\r\n              {useFormErrors.name?.type === \"required\" && (\r\n                <div className=\"invalid-feedback\">Please enter a name.</div>\r\n              )}\r\n            </div>\r\n            <label htmlFor=\"email\" className=\"form-label\">\r\n              Email address\r\n            </label>\r\n            <div className=\"input-group mb-3\">\r\n              <span className=\"input-group-text\">\r\n                <i className=\"bi bi-envelope-fill text-secondary\"></i>\r\n              </span>\r\n              <input\r\n                {...useFormRegister(\"email\", {\r\n                  required: true,\r\n                })}\r\n                type=\"email\"\r\n                placeholder=\"Enter an email\"\r\n                className={`form-control ${\r\n                  useFormErrors.email && `is-invalid`\r\n                }`}\r\n                name=\"email\"\r\n                id=\"email\"\r\n                value={email}\r\n                onChange={onChange}\r\n              />\r\n              {useFormErrors.email?.type === \"required\" && (\r\n                <div className=\"invalid-feedback\">Please enter an email.</div>\r\n              )}\r\n            </div>\r\n            <label htmlFor=\"password\" className=\"form-label\">\r\n              Password\r\n            </label>\r\n            <div className=\"input-group mb-3\">\r\n              <span className=\"input-group-text\">\r\n                <i className=\"bi bi-lock-fill text-secondary\"></i>\r\n              </span>\r\n              <input\r\n                {...useFormRegister(\"password\", {\r\n                  required: true,\r\n                })}\r\n                type=\"password\"\r\n                placeholder=\"Enter password\"\r\n                className={`form-control ${\r\n                  useFormErrors.password && `is-invalid`\r\n                }`}\r\n                name=\"password\"\r\n                id=\"password\"\r\n                value={password}\r\n                onChange={onChange}\r\n              />\r\n              {useFormErrors.password?.type === \"required\" && (\r\n                <div className=\"invalid-feedback\">Please enter a password.</div>\r\n              )}\r\n            </div>\r\n            <label htmlFor=\"password2\" className=\"form-label\">\r\n              Confirm Password\r\n            </label>\r\n            <div className=\"input-group mb-3\">\r\n              <span className=\"input-group-text\">\r\n                <i className=\"bi bi-lock-fill text-secondary\"></i>\r\n              </span>\r\n              <input\r\n                {...useFormRegister(\"password2\", {\r\n                  required: true,\r\n                })}\r\n                type=\"password\"\r\n                placeholder=\"Confirm password\"\r\n                className={`form-control ${\r\n                  useFormErrors.password2 && `is-invalid`\r\n                }`}\r\n                name=\"password2\"\r\n                id=\"password2\"\r\n                value={password2}\r\n                onChange={onChange}\r\n              />\r\n              {useFormErrors.password2?.type === \"required\" && (\r\n                <div className=\"invalid-feedback\">Please confirm password.</div>\r\n              )}\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-cardialred mt-3\">\r\n              Register\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className=\"my-3 text-center\">\r\n          Have an Account?{\" \"}\r\n          <Link className=\"text-cardialred \" to=\"/login\">\r\n            Login\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterScreen;\r\n"]},"metadata":{},"sourceType":"module"}