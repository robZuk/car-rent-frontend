{"ast":null,"code":"var _jsxFileName = \"E:\\\\ROBERT PROJECTS\\\\car-rental2022\\\\frontend\\\\src\\\\screens\\\\LoginScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { useForm } from \"react-hook-form\";\nimport Loader from \"../components/Loader\";\nimport { login } from \"../actions/userActions\";\nimport { USER_ERROR_RESET } from \"../constants/userConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginScreen() {\n  _s();\n\n  var _useFormErrors$email, _useFormErrors$passwo;\n\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const {\n    email,\n    password\n  } = formData;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors: useFormErrors\n    }\n  } = useForm();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    loading,\n    error,\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    userInfo && navigate(\"/cars\");\n    error && toast.error(error);\n    error && dispatch({\n      type: USER_ERROR_RESET\n    });\n  }, [error, navigate, dispatch, userInfo]);\n\n  const onChange = e => {\n    setFormData(prevState => ({ ...prevState,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const submitHandler = () => {\n    dispatch(login(email, password));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      height: \"40vh\",\n      marginTop: \"10vh\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-md-8 col-lg-6\",\n        style: {\n          border: \".5px solid lightgray\",\n          borderRadius: \"5px\",\n          padding: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(submitHandler),\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"form-label\",\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"input-group-text\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-envelope-fill text-secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"email\", {\n                required: true\n              }),\n              type: \"email\",\n              placeholder: \"Enter an email\",\n              className: `form-control ${useFormErrors.email && `is-invalid`}`,\n              id: \"email\",\n              value: email,\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), ((_useFormErrors$email = useFormErrors.email) === null || _useFormErrors$email === void 0 ? void 0 : _useFormErrors$email.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: \"Please enter an email.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"form-label\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"input-group-text\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-lock-fill text-secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"password\", {\n                required: true\n              }),\n              type: \"password\",\n              placeholder: \"Enter a password\",\n              className: `form-control ${useFormErrors.password && `is-invalid`}`,\n              id: \"password\",\n              value: password,\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), ((_useFormErrors$passwo = useFormErrors.password) === null || _useFormErrors$passwo === void 0 ? void 0 : _useFormErrors$passwo.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: \"Please enter a password.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-cardialred mt-3\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-3 text-center\",\n        children: [\"New Customer?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n          className: \"text-cardialred \",\n          to: \"/register\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginScreen, \"jx+C4jU+8DF5zuh50kKq474jLrM=\", false, function () {\n  return [useDispatch, useNavigate, useLocation, useForm, useSelector];\n});\n\n_c = LoginScreen;\nexport default LoginScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"sources":["E:/ROBERT PROJECTS/car-rental2022/frontend/src/screens/LoginScreen.js"],"names":["React","useState","useEffect","Link","useNavigate","useLocation","useDispatch","useSelector","toast","useForm","Loader","login","USER_ERROR_RESET","LoginScreen","formData","setFormData","email","password","dispatch","navigate","location","register","handleSubmit","formState","errors","useFormErrors","userLogin","state","loading","error","userInfo","type","onChange","e","prevState","target","name","value","submitHandler","height","marginTop","border","borderRadius","padding","required"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Loader from \"../components/Loader\";\r\nimport { login } from \"../actions/userActions\";\r\nimport { USER_ERROR_RESET } from \"../constants/userConstants\";\r\n\r\nfunction LoginScreen() {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors: useFormErrors },\r\n  } = useForm();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    userInfo && navigate(\"/cars\");\r\n\r\n    error && toast.error(error);\r\n    error && dispatch({ type: USER_ERROR_RESET });\r\n  }, [error, navigate, dispatch, userInfo]);\r\n\r\n  const onChange = (e) => {\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const submitHandler = () => {\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"container\"\r\n      style={{\r\n        height: \"40vh\",\r\n        marginTop: \"10vh\",\r\n      }}\r\n    >\r\n      <div className=\"row justify-content-center\">\r\n        <div\r\n          className=\"col-12 col-md-8 col-lg-6\"\r\n          style={{\r\n            border: \".5px solid lightgray\",\r\n            borderRadius: \"5px\",\r\n            padding: \"30px\",\r\n          }}\r\n        >\r\n          <h4>Sign In</h4>\r\n          {loading && <Loader />}\r\n\r\n          <form onSubmit={handleSubmit(submitHandler)}>\r\n            <label htmlFor=\"email\" className=\"form-label\">\r\n              Email address\r\n            </label>\r\n            <div className=\"input-group mb-3\">\r\n              <span className=\"input-group-text\">\r\n                <i className=\"bi bi-envelope-fill text-secondary\"></i>\r\n              </span>\r\n              <input\r\n                {...register(\"email\", {\r\n                  required: true,\r\n                })}\r\n                type=\"email\"\r\n                placeholder=\"Enter an email\"\r\n                className={`form-control ${\r\n                  useFormErrors.email && `is-invalid`\r\n                }`}\r\n                id=\"email\"\r\n                value={email}\r\n                onChange={onChange}\r\n              />\r\n              {useFormErrors.email?.type === \"required\" && (\r\n                <div className=\"invalid-feedback\">Please enter an email.</div>\r\n              )}\r\n            </div>\r\n            <label htmlFor=\"password\" className=\"form-label\">\r\n              Password\r\n            </label>\r\n            <div className=\"input-group mb-3\">\r\n              <span className=\"input-group-text\">\r\n                <i className=\"bi bi-lock-fill text-secondary\"></i>\r\n              </span>\r\n              <input\r\n                {...register(\"password\", {\r\n                  required: true,\r\n                })}\r\n                type=\"password\"\r\n                placeholder=\"Enter a password\"\r\n                className={`form-control ${\r\n                  useFormErrors.password && `is-invalid`\r\n                }`}\r\n                id=\"password\"\r\n                value={password}\r\n                onChange={onChange}\r\n              />\r\n              {useFormErrors.password?.type === \"required\" && (\r\n                <div className=\"invalid-feedback\">Please enter a password.</div>\r\n              )}\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-cardialred mt-3\">\r\n              Sign In\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className=\"my-3 text-center\">\r\n          New Customer?{\" \"}\r\n          <Link className=\"text-cardialred \" to=\"/register\">\r\n            Register\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n"]},"metadata":{},"sourceType":"module"}