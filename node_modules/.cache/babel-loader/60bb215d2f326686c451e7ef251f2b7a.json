{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\"; //import { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport { carListReducer, carDetailsReducer, carReservationReducer, carCreateReducer, carUpdateReducer, carDeleteReducer } from \"./reducers/carReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from \"./reducers/userReducers\";\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer } from \"./reducers/orderReducers\";\nconst middleware = [thunk];\nconst reducer = combineReducers({\n  carList: carListReducer,\n  carDetails: carDetailsReducer,\n  carCreate: carCreateReducer,\n  carUpdate: carUpdateReducer,\n  carDelete: carDeleteReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  carReservation: carReservationReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer\n});\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst store = createStore(reducer, initialState, applyMiddleware(...middleware));\nexport default store;","map":{"version":3,"sources":["E:/net ninja/car-rental2022/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","carListReducer","carDetailsReducer","carReservationReducer","carCreateReducer","carUpdateReducer","carDeleteReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","orderListReducer","middleware","reducer","carList","carDetails","carCreate","carUpdate","carDelete","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","carReservation","orderCreate","orderDetails","orderPay","orderListMy","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","cartItems","userInfo","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CACA;;AAEA,SACEC,cADF,EAEEC,iBAFF,EAGEC,qBAHF,EAIEC,gBAJF,EAKEC,gBALF,EAMEC,gBANF,QAOO,wBAPP;AASA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,wBAJF,EAKEC,eALF,EAMEC,iBANF,EAOEC,iBAPF,QAQO,yBARP;AAUA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,eAHF,EAIEC,kBAJF,EAKEC,gBALF,QAMO,0BANP;AAQA,MAAMC,UAAU,GAAG,CAACpB,KAAD,CAAnB;AAEA,MAAMqB,OAAO,GAAGvB,eAAe,CAAC;AAC9BwB,EAAAA,OAAO,EAAErB,cADqB;AAE9BsB,EAAAA,UAAU,EAAErB,iBAFkB;AAG9BsB,EAAAA,SAAS,EAAEpB,gBAHmB;AAI9BqB,EAAAA,SAAS,EAAEpB,gBAJmB;AAK9BqB,EAAAA,SAAS,EAAEpB,gBALmB;AAM9BqB,EAAAA,IAAI,EAAEpB,WANwB;AAO9BqB,EAAAA,SAAS,EAAEpB,gBAPmB;AAQ9BqB,EAAAA,YAAY,EAAEpB,mBARgB;AAS9BqB,EAAAA,WAAW,EAAEpB,kBATiB;AAU9BqB,EAAAA,iBAAiB,EAAEpB,wBAVW;AAW9BqB,EAAAA,QAAQ,EAAEpB,eAXoB;AAY9BqB,EAAAA,UAAU,EAAEpB,iBAZkB;AAa9BqB,EAAAA,UAAU,EAAEpB,iBAbkB;AAc9BqB,EAAAA,cAAc,EAAEhC,qBAdc;AAe9BiC,EAAAA,WAAW,EAAErB,kBAfiB;AAgB9BsB,EAAAA,YAAY,EAAErB,mBAhBgB;AAiB9BsB,EAAAA,QAAQ,EAAErB,eAjBoB;AAkB9BsB,EAAAA,WAAW,EAAErB,kBAlBiB;AAmB9BsB,EAAAA,SAAS,EAAErB;AAnBmB,CAAD,CAA/B;AAsBA,MAAMsB,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMI,YAAY,GAAG;AACnBpB,EAAAA,IAAI,EAAE;AACJqB,IAAAA,SAAS,EAAEP;AADP,GADa;AAInBb,EAAAA,SAAS,EAAE;AAAEqB,IAAAA,QAAQ,EAAEH;AAAZ;AAJQ,CAArB;AAOA,MAAMI,KAAK,GAAGrD,WAAW,CACvBwB,OADuB,EAEvB0B,YAFuB,EAGvBhD,eAAe,CAAC,GAAGqB,UAAJ,CAHQ,CAAzB;AAMA,eAAe8B,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n//import { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport {\r\n  carListReducer,\r\n  carDetailsReducer,\r\n  carReservationReducer,\r\n  carCreateReducer,\r\n  carUpdateReducer,\r\n  carDeleteReducer,\r\n} from \"./reducers/carReducers\";\r\n\r\nimport { cartReducer } from \"./reducers/cartReducers\";\r\n\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from \"./reducers/userReducers\";\r\n\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n} from \"./reducers/orderReducers\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst reducer = combineReducers({\r\n  carList: carListReducer,\r\n  carDetails: carDetailsReducer,\r\n  carCreate: carCreateReducer,\r\n  carUpdate: carUpdateReducer,\r\n  carDelete: carDeleteReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  carReservation: carReservationReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  applyMiddleware(...middleware)\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}