{"ast":null,"code":"var _jsxFileName = \"E:\\\\ROBERT PROJECTS\\\\car-rental2022\\\\frontend\\\\src\\\\screens\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport Loader from \"../components/Loader\";\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\nimport { listMyOrders } from \"../actions/orderActions\";\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\nimport HeaderContainer from \"../themes/HeaderContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProfileScreem() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const orderDetails = useSelector(state => state.orderDetails);\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  const orderListMy = useSelector(state => state.orderListMy);\n  const {\n    loading: loadingOrders,\n    error: errorOrders,\n    orders\n  } = orderListMy;\n  const {\n    order\n  } = orderDetails;\n  useEffect(() => {\n    if (order && order.isPaid) {\n      dispatch(listMyOrders());\n    }\n\n    if (!userInfo) {\n      navigate(\"/login\");\n    } else {\n      if (!user || !user.name || success) {\n        dispatch({\n          type: USER_UPDATE_PROFILE_RESET\n        });\n        dispatch(getUserDetails(\"profile\"));\n        dispatch(listMyOrders());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, navigate, userInfo, user, success, order]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      dispatch(updateUserProfile({\n        id: user._id,\n        name,\n        email,\n        password\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(HeaderContainer, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProfileScreem, \"evd3JHzpYEZsUeBMK17gznDoqME=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ProfileScreem;\nexport default ProfileScreem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreem\");","map":{"version":3,"sources":["E:/ROBERT PROJECTS/car-rental2022/frontend/src/screens/ProfileScreen.js"],"names":["React","useState","useEffect","useDispatch","useSelector","useNavigate","Loader","getUserDetails","updateUserProfile","listMyOrders","USER_UPDATE_PROFILE_RESET","HeaderContainer","ProfileScreem","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","navigate","userDetails","state","loading","error","user","orderDetails","userLogin","userInfo","userUpdateProfile","success","orderListMy","loadingOrders","errorOrders","orders","order","isPaid","type","submitHandler","e","preventDefault","id","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport { listMyOrders } from \"../actions/orderActions\";\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\r\nimport HeaderContainer from \"../themes/HeaderContainer\";\r\n\r\nfunction ProfileScreem() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n  const { order } = orderDetails;\r\n\r\n  useEffect(() => {\r\n    if (order && order.isPaid) {\r\n      dispatch(listMyOrders());\r\n    }\r\n\r\n    if (!userInfo) {\r\n      navigate(\"/login\");\r\n    } else {\r\n      if (!user || !user.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n        dispatch(getUserDetails(\"profile\"));\r\n        dispatch(listMyOrders());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, navigate, userInfo, user, success, order]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <HeaderContainer>\r\n      <div className=\"container\">\r\n        <div className=\"row\"></div>\r\n      </div>\r\n    </HeaderContainer>\r\n  );\r\n}\r\n\r\nexport default ProfileScreem;\r\n"]},"metadata":{},"sourceType":"module"}