{"ast":null,"code":"var _jsxFileName = \"E:\\\\ROBERT PROJECTS\\\\car-rental2022\\\\frontend\\\\src\\\\screens\\\\PlaceOrderScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Message from \"../components/Message\";\nimport { createOrder } from \"../actions/orderActions\";\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\nimport { USER_DETAILS_RESET } from \"../constants/userConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PlaceOrderScreen() {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const cart = useSelector(state => state.cart); //   Calculate prices\n\n  const addDecimals = num => {\n    return (Math.round(num * 100) / 100).toFixed(2);\n  };\n\n  const totalPrice = cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.reservedDays.length, 0));\n  const paymentOnAccount = 0.2 * totalPrice;\n  const orderCreate = useSelector(state => state.orderCreate);\n  const {\n    order,\n    success,\n    error\n  } = orderCreate;\n  useEffect(() => {\n    !cart.paymentOnAccountMethod && navigate(\"/payment\");\n\n    if (success && order) {\n      navigate(`/order/${order._id}`);\n      dispatch({\n        type: USER_DETAILS_RESET\n      });\n      dispatch({\n        type: ORDER_CREATE_RESET\n      });\n    }\n  }, [success, dispatch, navigate, order, cart.paymentOnAccountMethod]);\n\n  const placeOrderHandler = () => {\n    dispatch(createOrder({\n      orderItems: cart.cartItems,\n      paymentOnAccountMethod: cart.paymentOnAccountMethod,\n      totalPrice,\n      paymentOnAccount\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-sm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Payment Method\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"Method: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), cart.paymentOnAccountMethod, /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Order Items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), cart.cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n      children: \"Your cart is empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // <div className=\"table-responsive\">\n    //   <table\n    //     className=\"table align-middle\"\n    //     style={{\n    //       textAlign: \"center\",\n    //     }}\n    //   >\n    //     <tbody>\n    //       {cart.cartItems.map((item) => (\n    //         <tr key={item.car}>\n    //           <td>\n    //             <img\n    //               src={item.image}\n    //               alt={item.name}\n    //               style={{ width: \"100px\" }}\n    //             />\n    //           </td>\n    //           <td>\n    //             <Link\n    //               className=\"text-decoration-none text-cardialred\"\n    //               to={`/cars/${item.car}`}\n    //             >\n    //               {item.name}\n    //             </Link>\n    //           </td>\n    //           <td>\n    //             <strong>${item.price}/day</strong>\n    //           </td>\n    //           <td className=\"text-nowrap\">\n    //             Reserved days:{\" \"}\n    //             {item.reservedDays.map((date, index) => (\n    //               <div key={index} className=\"text-nowrap\">\n    //                 {date}\n    //               </div>\n    //             ))}\n    //           </td>\n    //         </tr>\n    //       ))}\n    //     </tbody>\n    //   </table>\n    // </div>\n    _jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PlaceOrderScreen, \"s4a8Pf0ic/tx8az99+l7Qv3hWiE=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector];\n});\n\n_c = PlaceOrderScreen;\nexport default PlaceOrderScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlaceOrderScreen\");","map":{"version":3,"sources":["E:/ROBERT PROJECTS/car-rental2022/frontend/src/screens/PlaceOrderScreen.js"],"names":["React","useEffect","useDispatch","useSelector","Link","useNavigate","Message","createOrder","ORDER_CREATE_RESET","USER_DETAILS_RESET","PlaceOrderScreen","dispatch","navigate","cart","state","addDecimals","num","Math","round","toFixed","totalPrice","itemsPrice","cartItems","reduce","acc","item","price","reservedDays","length","paymentOnAccount","orderCreate","order","success","error","paymentOnAccountMethod","_id","type","placeOrderHandler","orderItems"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,kBAAT,QAAmC,6BAAnC;AACA,SAASC,kBAAT,QAAmC,4BAAnC;;;AAEA,SAASC,gBAAT,GAA4B;AAAA;;AAC1B,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,QAAQ,GAAGP,WAAW,EAA5B;AAEA,QAAMQ,IAAI,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB,CAJ0B,CAM1B;;AACA,QAAME,WAAW,GAAIC,GAAD,IAAS;AAC3B,WAAO,CAACC,IAAI,CAACC,KAAL,CAAWF,GAAG,GAAG,GAAjB,IAAwB,GAAzB,EAA8BG,OAA9B,CAAsC,CAAtC,CAAP;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAIP,IAAI,CAACQ,UAAL,GAAkBN,WAAW,CAC/CF,IAAI,CAACS,SAAL,CAAeC,MAAf,CACE,CAACC,GAAD,EAAMC,IAAN,KAAeD,GAAG,GAAGC,IAAI,CAACC,KAAL,GAAaD,IAAI,CAACE,YAAL,CAAkBC,MADtD,EAEE,CAFF,CAD+C,CAAjD;AAOA,QAAMC,gBAAgB,GAAG,MAAMT,UAA/B;AAEA,QAAMU,WAAW,GAAG3B,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACgB,WAAlB,CAA/B;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA4BH,WAAlC;AAEA7B,EAAAA,SAAS,CAAC,MAAM;AACd,KAACY,IAAI,CAACqB,sBAAN,IAAgCtB,QAAQ,CAAC,UAAD,CAAxC;;AAEA,QAAIoB,OAAO,IAAID,KAAf,EAAsB;AACpBnB,MAAAA,QAAQ,CAAE,UAASmB,KAAK,CAACI,GAAI,EAArB,CAAR;AACAxB,MAAAA,QAAQ,CAAC;AAAEyB,QAAAA,IAAI,EAAE3B;AAAR,OAAD,CAAR;AACAE,MAAAA,QAAQ,CAAC;AAAEyB,QAAAA,IAAI,EAAE5B;AAAR,OAAD,CAAR;AACD;AACF,GARQ,EAQN,CAACwB,OAAD,EAAUrB,QAAV,EAAoBC,QAApB,EAA8BmB,KAA9B,EAAqClB,IAAI,CAACqB,sBAA1C,CARM,CAAT;;AAUA,QAAMG,iBAAiB,GAAG,MAAM;AAC9B1B,IAAAA,QAAQ,CACNJ,WAAW,CAAC;AACV+B,MAAAA,UAAU,EAAEzB,IAAI,CAACS,SADP;AAEVY,MAAAA,sBAAsB,EAAErB,IAAI,CAACqB,sBAFnB;AAGVd,MAAAA,UAHU;AAIVS,MAAAA;AAJU,KAAD,CADL,CAAR;AAQD,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGhB,IAAI,CAACqB,sBAHR,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,EAMGrB,IAAI,CAACS,SAAL,CAAeM,MAAf,KAA0B,CAA1B,gBACC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAAA;AAGC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA,YAlDJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuDD;;GAnGQlB,gB;UACUR,W,EACAG,W,EAEJF,W,EAgBOA,W;;;KApBbO,gB;AAqGT,eAAeA,gBAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Message from \"../components/Message\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\r\nimport { USER_DETAILS_RESET } from \"../constants/userConstants\";\r\n\r\nfunction PlaceOrderScreen() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  //   Calculate prices\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  const totalPrice = (cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce(\r\n      (acc, item) => acc + item.price * item.reservedDays.length,\r\n      0\r\n    )\r\n  ));\r\n\r\n  const paymentOnAccount = 0.2 * totalPrice;\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n\r\n  useEffect(() => {\r\n    !cart.paymentOnAccountMethod && navigate(\"/payment\");\r\n\r\n    if (success && order) {\r\n      navigate(`/order/${order._id}`);\r\n      dispatch({ type: USER_DETAILS_RESET });\r\n      dispatch({ type: ORDER_CREATE_RESET });\r\n    }\r\n  }, [success, dispatch, navigate, order, cart.paymentOnAccountMethod]);\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        paymentOnAccountMethod: cart.paymentOnAccountMethod,\r\n        totalPrice,\r\n        paymentOnAccount,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-sm\">\r\n      <h4>Payment Method</h4>\r\n      <strong>Method: </strong>\r\n      {cart.paymentOnAccountMethod}\r\n\r\n      <h4>Order Items</h4>\r\n      {cart.cartItems.length === 0 ? (\r\n        <Message>Your cart is empty</Message>\r\n      ) : (\r\n        // <div className=\"table-responsive\">\r\n        //   <table\r\n        //     className=\"table align-middle\"\r\n        //     style={{\r\n        //       textAlign: \"center\",\r\n        //     }}\r\n        //   >\r\n        //     <tbody>\r\n        //       {cart.cartItems.map((item) => (\r\n        //         <tr key={item.car}>\r\n        //           <td>\r\n        //             <img\r\n        //               src={item.image}\r\n        //               alt={item.name}\r\n        //               style={{ width: \"100px\" }}\r\n        //             />\r\n        //           </td>\r\n        //           <td>\r\n        //             <Link\r\n        //               className=\"text-decoration-none text-cardialred\"\r\n        //               to={`/cars/${item.car}`}\r\n        //             >\r\n        //               {item.name}\r\n        //             </Link>\r\n        //           </td>\r\n        //           <td>\r\n        //             <strong>${item.price}/day</strong>\r\n        //           </td>\r\n        //           <td className=\"text-nowrap\">\r\n        //             Reserved days:{\" \"}\r\n        //             {item.reservedDays.map((date, index) => (\r\n        //               <div key={index} className=\"text-nowrap\">\r\n        //                 {date}\r\n        //               </div>\r\n        //             ))}\r\n        //           </td>\r\n        //         </tr>\r\n        //       ))}\r\n        //     </tbody>\r\n        //   </table>\r\n        // </div>\r\n        <div />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlaceOrderScreen;\r\n"]},"metadata":{},"sourceType":"module"}